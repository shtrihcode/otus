MACHINES = {
:inetRouter => {
        :box_name => "centos/7",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"}
                ]
  },
:inetRouter2 => {
        :box_name => "centos/7",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.245.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router2-net"},
				   {ip: '192.168.11.121', adapter: 3, netmask: "255.255.255.0", virtualbox__intnet: false}
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
				   {ip: '192.168.245.2', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router2-net"},
                   {ip: '192.168.0.1', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "central-net"}
                ]
  },
  
  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "central-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: true},
                   {adapter: 4, auto_config: false, virtualbox__intnet: true}
                ]
  },
  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL

         box.vm.provision "ansible" do |ansible|
           ansible.playbook = "provision.yml"
           ansible.become = "true"
        end       


        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
			ip route add 192.168.0.0/28 via 192.168.255.2 dev eth1
			iptables-restore < /vagrant/knocking-rules
            SHELL
		when "inetRouter2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
			ip route add 192.168.0.0/28 via 192.168.245.2 dev eth1
                        iptables-restore < /vagrant/rules
            SHELL
        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            systemctl restart network
			ip route del default
			ip route add default via 192.168.255.1 dev eth1
			ip route add 192.168.1.0/24 via 192.168.245.1 dev eth2
			ip route add 192.168.11.0/24 via 192.168.245.1 dev eth2
			chmod +x /vagrant/knock.sh
            SHELL
        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            systemctl restart network
			ip route del default
			ip route add default via 192.168.0.1 dev eth1
            SHELL
        end

      end

  end
  
  
end